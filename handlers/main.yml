---
- name: daemon_reload
  systemd:
    daemon_reload: true

- name: reload_nginx
  service:
    name: nginx
    state: reloaded
    enabled: true
  when:
    - nginx_start | bool
    - nginx_state != 'absent'
    - not ansible_check_mode | bool
  listen: run_nginx

- name: check_nginx
  command: nginx -t
  args:
    chdir: "{{ ((ansible_facts['system'] | lower is not search('bsd')) | ternary('/etc/nginx', '/usr/local/sbin')) }}"
  register: config_check
  ignore_errors: true
  check_mode: false
  changed_when: false
  when: nginx_state != "absent"
  listen: run_nginx

- name: print_nginx_error
  debug:
    var: config_check.stderr_lines
  failed_when: config_check['rc'] != 0
  when:
    - config_check['stderr_lines'] is defined
    - config_check['stderr_lines'] != []
    - config_check['rc'] != 0
    - nginx_state != "absent"
  listen: run_nginx

- name: start_amplify
  service:
    name: amplify-agent
    state: started

- name: logrotate
  command: logrotate -f /etc/logrotate.d/nginx

- name: save_iptables_rules
  community.general.iptables_state:
    ip_version: "ipv4"
    state: saved
    path: "/etc/sysconfig/iptables"
  when: ansible_os_family == "RedHat"
  listen: save_iptables_rules

- name: save_iptables_rules
  community.general.iptables_state:
    ip_version: "ipv4"
    state: saved
    path: "/etc/iptables/rules.v4"
  when: ansible_os_family == "Debian"
  listen: save_iptables_rules
