---
- name: Ensure default directories exists
  file:
    path: "{{ item }}"
    owner: root
    group: root
    state: directory
    mode: 0755
  with_items:
    - "/etc/nginx/conf.d"
    - "/etc/nginx/snippets"

- name: Remove unnecessary files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/etc/nginx/sites-available"
    - "/etc/nginx/sites-enabled"
    - "/etc/nginx/conf.d/default.conf"
    - "/etc/nginx/snippets/snakeoil.conf"
  notify: reload_nginx

- name: Copy add-host.sh script
  copy:
    src: "add-host.sh"
    dest: "/etc/nginx/add-host.sh"
    owner: root
    group: root
    mode: 0744

- name: Generate default config
  template:
    src: "nginx.conf"
    dest: "/etc/nginx/nginx.conf"
    owner: root
    group: root
    mode: 0644
  notify: reload_nginx

- name: Generate snippets
  template:
    src: "{{ item }}"
    dest: "/etc/nginx/snippets/"
    owner: root
    group: root
    mode: 0644
  with_fileglob:
    - "templates/snippets/*"
  notify: reload_nginx

- name: Generate custom configs
  template:
    src: "{{ item }}"
    dest: "/etc/nginx/conf.d/"
    owner: root
    group: root
    mode: 0644
  with_fileglob:
    - "templates/configs/*"
  notify: reload_nginx

- name: Download Cloudflare CA certificate
  get_url:
    url: "{{ nginx_cloudflare_ca_cert_url }}"
    dest: "/etc/ssl/certs/cloudflare.crt"
    owner: root
    group: root
    mode: 0640
  register: _download_file
  until: _download_file is succeeded
  retries: 5

- name: Generate autoupdate configs for apt
  copy:
    src: "apt.conf.d/70nginx"
    dest: "/etc/apt/apt.conf.d/"
    owner: root
    group: root
    mode: 0644
  when: nginx_apt_autoupdate_configure | bool
